---
import CloseIcon from "@/icons/Close.astro";
import SearchFormButton from "./SearchFormButton.astro";
import Question from "@/icons/Question.astro";
import ErrorCircle from "@/icons/ErrorCircle.astro";
---

<script>
  import { alpineData } from "@/utils";

  alpineData("search_form", () => ({
    results: [],
    get state() {
      if (this.results.length === 0) return "none";
      else if (this.results === null) return "error";
      return "list";
    },
    init() {
      document.addEventListener("keydown", (e) => {
        if ((e.ctrlKey || e.metaKey) && e.key === "k") {
          e.preventDefault();
          const dialog = this.$refs.dialog;
          if (!dialog.open) {
            dialog.showModal();
          } else {
            dialog.close();
          }
        }
      });
    },
    async fetchResults() {
      const searchValue = this.$refs.search.value;
      if (searchValue) {
        try {
          const res = await fetch(
            "/api/cities?q=" + this.$refs.search.value
          ).then((res) => {
            if (!res.ok) throw Error();
            res.json();
          });
          this.results = res;
        } catch {
          this.results = null;
        }
      }
    },
  }));
</script>

<div x-data="search_form">
  <SearchFormButton />

  <dialog
    class="text-inherit bg-transparent mt-40 w-full max-w-96"
    x-ref="dialog"
  >
    <div
      class="p-4 pt-7 bg-surface-50 dark:bg-surface-900 rounded-md mx-2 relative"
    >
      <button
        class="bg-transparent absolute right-1 top-1 w-8 h-8"
        @click="$refs.dialog.close()"
      >
        <CloseIcon />
      </button>

      <input
        class="border-b p-1 outline-none bg-transparent border-surface-400 dark:border-surface-800 w-full"
        x-ref="search"
        type="search"
        @input.debounce="fetchResults()"
        autofocus
      />

      <ul class="pt-4">
        <template x-if="state === 'list'">
          <template x-for="result in results">
            <li>
              <a
                class="flex gap-3 items-end text-auto p-1"
                :href="`/?lat=${result.lat}&lon=${result.lon}`"
              >
                <span x-text="result.name"></span>
                <span class="text-sm opacity-70" x-text="result.country"></span>
              </a>
            </li>
          </template>
        </template>

        <template x-if="state === 'none'">
          <li class="text-center flex items-center justify-center flex-col">
            <div
              class="w-16 text-surface-600 dark:text-surface-800 md:w-20 mb-2"
            >
              <Question />
            </div>
            <span class="opacity-60">no results found</span>
          </li>
        </template>

        <template x-if="state === 'error'">
          <li class="text-center flex items-center justify-center flex-col">
            <div
              class="w-16 text-surface-600 dark:text-surface-800 md:w-20 mb-2"
            >
              <ErrorCircle />
            </div>
            <span class="opacity-60">failed to search!</span>
          </li>
        </template>
      </ul>
    </div>
  </dialog>
</div>
